[2016-06-28 20:21:34,915] INFO [SessionExpirationListener on 0], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-06-28 20:21:34,918] DEBUG [Controller 0]: Controller resigning, broker id 0 (kafka.controller.KafkaController)
[2016-06-28 20:21:34,918] DEBUG [Controller 0]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-06-28 20:21:34,921] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-06-28 20:21:34,921] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-06-28 20:21:34,926] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-06-28 20:21:34,927] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-06-28 20:21:34,927] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-06-28 20:21:34,928] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
[2016-06-28 20:21:34,956] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2016-06-28 20:21:34,957] INFO [Controller 0]: Initialized controller epoch to 2 and zk version 1 (kafka.controller.KafkaController)
[2016-06-28 20:21:34,967] INFO [Controller 0]: Controller 0 incremented epoch to 3 (kafka.controller.KafkaController)
[2016-06-28 20:21:34,968] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-06-28 20:21:35,019] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-06-28 20:21:35,019] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-06-28 20:21:35,019] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-06-28 20:21:35,020] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-06-28 20:21:35,020] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-06-28 20:21:35,020] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-06-28 20:21:35,021] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-06-28 20:21:35,021] INFO [Controller 0]: List of topics ineligible for deletion: forex,rules,forexJ,tick_topic (kafka.controller.KafkaController)
[2016-06-28 20:21:35,021] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-06-28 20:21:35,021] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-06-28 20:21:35,021] INFO [Controller 0]: Current list of topics in the cluster: Set(forexJ, rules, forex, tick_topic) (kafka.controller.KafkaController)
[2016-06-28 20:21:35,022] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=forexJ,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=forex,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=tick_topic,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=rules,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-06-28 20:21:35,027] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [forex,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-06-28 20:21:35,033] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [rules,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-06-28 20:21:35,037] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [forexJ,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-06-28 20:21:35,051] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [tick_topic,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-06-28 20:21:35,052] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([forex,0] -> OfflinePartition, [rules,0] -> OfflinePartition, [forexJ,0] -> OfflinePartition, [tick_topic,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-06-28 20:21:35,053] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2016-06-28 20:21:35,053] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-06-28 20:21:35,053] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-06-28 20:21:35,056] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-06-28 20:21:35,071] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-06-28 20:21:35,072] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-06-28 20:21:35,075] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-06-28 20:21:35,075] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2016-06-28 20:21:35,077] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2016-06-28 20:21:35,079] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=forex,Partition=0,Replica=0],[Topic=rules,Partition=0,Replica=0],[Topic=forexJ,Partition=0,Replica=0],[Topic=tick_topic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-06-28 20:21:35,087] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [forex,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-06-28 20:21:35,087] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [forex,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-06-28 20:21:35,094] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-06-28 20:21:35,098] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2016-06-28 20:21:35,101] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([forex,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3), [rules,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [forexJ,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [tick_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2)) (kafka.controller.PartitionStateMachine)
[2016-06-28 20:21:35,106] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [rules,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-06-28 20:21:35,106] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [rules,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-06-28 20:21:35,124] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([forex,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3), [rules,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3), [forexJ,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [tick_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2)) (kafka.controller.PartitionStateMachine)
[2016-06-28 20:21:35,131] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [forexJ,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-06-28 20:21:35,132] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [forexJ,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-06-28 20:21:35,174] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([forex,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3), [rules,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3), [forexJ,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3), [tick_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2)) (kafka.controller.PartitionStateMachine)
[2016-06-28 20:21:35,177] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [tick_topic,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-06-28 20:21:35,177] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [tick_topic,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-06-28 20:21:35,190] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([forex,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3), [rules,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3), [forexJ,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3), [tick_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:3)) (kafka.controller.PartitionStateMachine)
[2016-06-28 20:21:35,201] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children forexJ,rules,forex,tick_topic (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-06-28 20:21:35,201] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-06-28 20:21:35,220] INFO [AddPartitionsListener on 0]: Partition modification triggered {"version":1,"partitions":{"0":[0]}} for path /brokers/topics/tick_topic (kafka.controller.PartitionStateMachine$PartitionModificationsListener)
[2016-06-28 20:21:35,229] INFO [AddPartitionsListener on 0]: Partition modification triggered {"version":1,"partitions":{"0":[0]}} for path /brokers/topics/rules (kafka.controller.PartitionStateMachine$PartitionModificationsListener)
[2016-06-28 20:21:35,231] INFO [AddPartitionsListener on 0]: Partition modification triggered {"version":1,"partitions":{"0":[0]}} for path /brokers/topics/forex (kafka.controller.PartitionStateMachine$PartitionModificationsListener)
[2016-06-28 20:21:35,232] INFO [AddPartitionsListener on 0]: Partition modification triggered {"version":1,"partitions":{"0":[0]}} for path /brokers/topics/forexJ (kafka.controller.PartitionStateMachine$PartitionModificationsListener)
[2016-06-28 20:21:35,237] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-06-28 20:21:35,241] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: , deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-06-28 20:21:40,057] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-06-28 20:21:40,057] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([forex,0] -> List(0), [rules,0] -> List(0), [forexJ,0] -> List(0), [tick_topic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-06-28 20:21:40,057] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-06-28 20:21:40,057] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-06-28 20:26:40,057] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-06-28 20:26:40,057] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([forex,0] -> List(0), [rules,0] -> List(0), [forexJ,0] -> List(0), [tick_topic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-06-28 20:26:40,057] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-06-28 20:26:40,057] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-06-28 20:29:42,341] INFO [Controller 0]: Shutting down broker 0 (kafka.controller.KafkaController)
[2016-06-28 20:29:42,342] DEBUG [Controller 0]: All shutting down brokers: 0 (kafka.controller.KafkaController)
[2016-06-28 20:29:42,342] DEBUG [Controller 0]: Live brokers:  (kafka.controller.KafkaController)
[2016-06-28 20:29:42,346] TRACE [Controller 0]: All leaders = [forex,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3),[rules,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3),[forexJ,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3),[tick_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:3) (kafka.controller.KafkaController)
[2016-06-28 20:29:44,257] DEBUG [Controller 0]: Controller resigning, broker id 0 (kafka.controller.KafkaController)
[2016-06-28 20:29:44,257] DEBUG [Controller 0]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-06-28 20:29:44,257] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-06-28 20:29:44,257] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-06-28 20:29:44,258] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-06-28 20:29:44,258] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-06-28 20:29:44,258] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-06-28 20:29:44,258] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
